#!/usr/bin/env sh

set -o errexit
set -o nounset

RE_VERSION="1.0.0"
RE_SOURCE_FILE_PATH="${HOME}/.remotes"
RE_NUMBER=""

# prints the help message
print_usage() {
    echo "
usage: remotes [<option> ... | <remote-number>]

OPTIONS:

  $(bold "-l | --list")      List the remotes
  $(bold "-e | --edit")      Edit the remotes source file
  $(bold "-h | --help")      Print this help text and exit
  $(bold "-v | --version")   Print the version and exit
    "
}

# print the given argumens and exits
die() {
    echo "${*}" && exit 0
}

# print the given arguments bold
bold() {
    printf "\033[1m%s\033[0m" "${*}"
}

# reads the lines from the remotes file
read_lines() {
    if [ -f "${RE_SOURCE_FILE_PATH}" ]; then
        grep -o '^[^#]*' "${RE_SOURCE_FILE_PATH}"
    else
        die "File ${RE_SOURCE_FILE_PATH} not existing."
    fi
}

# returns the line specified by the given number
read_line_from_number() {
    read_lines | sed -n "${1}p"
}

# prints the version and exits
print_version() {
    echo "remotes version ${RE_VERSION}"
}

# edit the source remotes files
edit_source_file() {
    if [ ! "$(which code)" = "" ]; then
        code "${RE_SOURCE_FILE_PATH}"
    elif [ ! "$(which vim)" = "" ]; then
        vim "${RE_SOURCE_FILE_PATH}"
    fi
    exit 0
}

# lists all remotes
list() {
    echo
    RE_LINES=$(read_lines)
    RE_NUMBER=1
    for line in $RE_LINES; do

        RE_USER=$(echo "$line" | rev | cut -d"@" -f2- | rev)
        RE_HOST=$(echo "$line" | rev | cut -d"@" -f1 | rev)

        echo "$(bold "${RE_NUMBER}")  ${RE_USER}@$(bold "${RE_HOST}")"
        RE_NUMBER=$((RE_NUMBER + 1))
    done
    echo
}

connect_to_remote() {
    if [[ ! "${1}" =~ ^[0-9]+$ ]]; then
        die "Not a number: ${1}"
    fi

    RE_REMOTE=$(read_line_from_number "${1}")

    if [ "${RE_REMOTE}" = "" ]; then
        die "Invalid number: ${1}"
    fi

    echo && echo "ssh ${RE_REMOTE}" && echo

    ssh "${RE_REMOTE}"

    exit 0
}

# connect to remote
connect_interactive() {
    list
    printf "Enter the number to connect to / %s to quit: " "$(bold "q")"
    read -r RE_ANSWERE

    if [ "${RE_ANSWERE}" = "q" ] || [ "${RE_ANSWERE}" = "" ]; then
        exit 0
    else
        connect_to_remote "${RE_ANSWERE}"
    fi
}

# guard existence of argument / command
[ $# -ne 0 ] || connect_interactive

while [ $# -ne 0 ]; do
    opt="${1}"
    shift

    case $opt in
    --list | -l)
        list
        exit 0
        ;;
    --edit | -e)
        edit_source_file
        exit 0
        ;;
    --help | -h)
        print_usage
        exit 0
        ;;
    --version | -v)
        print_version
        exit 0
        ;;
    --number | -n)
        [ $# -ne 0 ] || die "Missing argument for $(bold "--number | -n") option."
        RE_NUMBER="${1}"
        shift
        ;;
    *)
        die "Unknown option: '${opt}'.  Pass '$(bold "--help")' for a list of commands."
        ;;
    esac
done

if [ "${RE_NUMBER}" = "" ]; then
    die "No number specified"
else
    connect_to_remote "${RE_NUMBER}"
fi

# clean exit
exit 0
